$date
	Sat Sep  9 11:20:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! ldp $end
$var wire 1 " ldb $end
$var wire 1 # lda $end
$var wire 1 $ done $end
$var wire 1 % clrp $end
$var reg 1 & clk $end
$var reg 7 ' data_in [6:0] $end
$var reg 1 ( start $end
$var reg 1 ) stop $end
$scope module CP $end
$var wire 1 & clk $end
$var wire 1 ( start $end
$var wire 1 ) stop $end
$var reg 1 % clrp $end
$var reg 1 $ done $end
$var reg 1 # lda $end
$var reg 1 " ldb $end
$var reg 1 ! ldp $end
$var reg 3 * state [2:0] $end
$upscope $end
$scope module DP $end
$var wire 7 + Bus [6:0] $end
$var wire 1 & clk $end
$var wire 1 % clrp $end
$var wire 7 , data_in [6:0] $end
$var wire 1 # lda $end
$var wire 1 " ldb $end
$var wire 1 ! ldp $end
$var wire 11 - Z [10:0] $end
$var wire 11 . P [10:0] $end
$var wire 10 / C [9:0] $end
$var wire 7 0 B [6:0] $end
$var wire 7 1 A [6:0] $end
$scope module a1 $end
$var wire 1 & clk $end
$var wire 11 2 y [10:0] $end
$var wire 10 3 x [9:0] $end
$var reg 11 4 z [10:0] $end
$upscope $end
$scope module m1 $end
$var wire 1 & clk $end
$var wire 7 5 y [6:0] $end
$var wire 7 6 x [6:0] $end
$var reg 10 7 z [9:0] $end
$upscope $end
$scope module r1 $end
$var wire 1 & clk $end
$var wire 1 # ld $end
$var wire 7 8 x [6:0] $end
$var reg 7 9 y [6:0] $end
$upscope $end
$scope module r2 $end
$var wire 1 & clk $end
$var wire 1 " ld $end
$var wire 7 : x [6:0] $end
$var reg 7 ; y [6:0] $end
$upscope $end
$scope module r3 $end
$var wire 1 & clk $end
$var wire 1 % clr $end
$var wire 1 ! ld $end
$var wire 11 < x [10:0] $end
$var reg 11 = y [10:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
bx '
0&
x%
x$
x#
x"
x!
$end
#5
b0 *
1&
#6
1(
#7
0$
0%
0!
0"
0#
#10
0&
#15
1&
#16
b1 *
#20
0&
#25
1&
#26
b10 *
#27
1%
#30
0&
#31
b10 +
b10 8
b10 :
b10 '
b10 ,
#35
b0 .
b0 2
b0 =
1&
#36
b11 *
#37
0%
1#
#40
0&
#45
b10 1
b10 6
b10 9
1&
#46
b100 *
#47
0#
1"
#50
0&
#55
b100 -
b100 4
b100 <
b100 /
b100 3
b100 7
b10 0
b10 5
b10 ;
1&
#56
b10 *
#57
0"
1!
#60
0&
#65
b1000 -
b1000 4
b1000 <
b100 .
b100 2
b100 =
1&
#66
b11 *
b100 +
b100 8
b100 :
b100 '
b100 ,
#67
0!
1#
#70
0&
#75
b1100 -
b1100 4
b1100 <
b1000 /
b1000 3
b1000 7
b100 1
b100 6
b100 9
1&
#76
b100 *
b110 +
b110 8
b110 :
b110 '
b110 ,
#77
0#
1"
#80
0&
#85
b110 0
b110 5
b110 ;
1&
#86
b10 *
#87
0"
1!
#90
0&
#95
b11100 .
b11100 2
b11100 =
b11100 -
b11100 4
b11100 <
b11000 /
b11000 3
b11000 7
1&
#96
b11 *
b1 +
b1 8
b1 :
b1 '
b1 ,
#97
0!
1#
#100
0&
#105
b1 1
b1 6
b1 9
b110100 -
b110100 4
b110100 <
1&
#106
b100 *
b110 +
b110 8
b110 :
b110 '
b110 ,
#107
0#
1"
#110
0&
#115
b100010 -
b100010 4
b100010 <
b110 /
b110 3
b110 7
1&
#116
b10 *
#117
0"
1!
#120
0&
#125
b101000 -
b101000 4
b101000 <
b100010 .
b100010 2
b100010 =
1&
#126
b11 *
b1 +
b1 8
b1 :
b1 '
b1 ,
#127
0!
1#
#130
0&
#135
1&
#136
b100 *
b11 +
b11 8
b11 :
b11 '
b11 ,
#137
0#
1"
#140
0&
#145
b11 0
b11 5
b11 ;
1&
#146
b10 *
#147
0"
1!
#150
0&
#155
b100101 .
b100101 2
b100101 =
b100101 -
b100101 4
b100101 <
b11 /
b11 3
b11 7
1&
#156
b11 *
b100 +
b100 8
b100 :
b100 '
b100 ,
#157
0!
1#
#160
0&
#165
b100 1
b100 6
b100 9
b101000 -
b101000 4
b101000 <
1&
#166
b100 *
#167
0#
1"
#170
0&
#175
b110101 -
b110101 4
b110101 <
b10000 /
b10000 3
b10000 7
b100 0
b100 5
b100 ;
1&
#176
b10 *
#177
0"
1!
#180
0&
#185
b1000101 -
b1000101 4
b1000101 <
b110101 .
b110101 2
b110101 =
1&
#186
b11 *
b10 +
b10 8
b10 :
b10 '
b10 ,
#187
0!
1#
#190
0&
#195
b111101 -
b111101 4
b111101 <
b1000 /
b1000 3
b1000 7
b10 1
b10 6
b10 9
1&
#196
b100 *
b101 +
b101 8
b101 :
b101 '
b101 ,
#197
0#
1"
#200
0&
#205
b101 0
b101 5
b101 ;
1&
#206
b10 *
#207
0"
1!
#210
0&
#215
b111111 .
b111111 2
b111111 =
b111111 -
b111111 4
b111111 <
b1010 /
b1010 3
b1010 7
1&
#216
b11 *
b1 +
b1 8
b1 :
b1 '
b1 ,
#217
0!
1#
#220
0&
#225
b1 1
b1 6
b1 9
b1001001 -
b1001001 4
b1001001 <
1&
#226
b100 *
b100 +
b100 8
b100 :
b100 '
b100 ,
#227
0#
1"
#230
0&
#235
b1000011 -
b1000011 4
b1000011 <
b100 /
b100 3
b100 7
b100 0
b100 5
b100 ;
1&
#236
b10 *
#237
0"
1!
#240
0&
#245
b1000111 -
b1000111 4
b1000111 <
b1000011 .
b1000011 2
b1000011 =
1&
#246
b11 *
b10 +
b10 8
b10 :
b10 '
b10 ,
#247
0!
1#
#250
0&
#255
b1001011 -
b1001011 4
b1001011 <
b1000 /
b1000 3
b1000 7
b10 1
b10 6
b10 9
1&
#256
b100 *
b11 +
b11 8
b11 :
b11 '
b11 ,
#257
0#
1"
#260
0&
#265
b11 0
b11 5
b11 ;
1&
#266
b10 *
#267
0"
1!
#270
0&
#275
b1001001 .
b1001001 2
b1001001 =
b1001001 -
b1001001 4
b1001001 <
b110 /
b110 3
b110 7
1&
#276
b11 *
b1000 +
b1000 8
b1000 :
b1000 '
b1000 ,
#277
0!
1#
#280
0&
#285
b1000 1
b1000 6
b1000 9
b1001111 -
b1001111 4
b1001111 <
1&
#286
b100 *
b100 +
b100 8
b100 :
b100 '
b100 ,
#287
0#
1"
#290
0&
#295
b1101001 -
b1101001 4
b1101001 <
b100000 /
b100000 3
b100000 7
b100 0
b100 5
b100 ;
1&
#296
b10 *
#297
0"
1!
#300
0&
#305
b10001001 -
b10001001 4
b10001001 <
b1101001 .
b1101001 2
b1101001 =
1&
#306
b11 *
b1 +
b1 8
b1 :
b1 '
b1 ,
#307
0!
1#
#310
0&
#315
b1101101 -
b1101101 4
b1101101 <
b100 /
b100 3
b100 7
b1 1
b1 6
b1 9
1&
#316
b100 *
b10 +
b10 8
b10 :
b10 '
b10 ,
#317
0#
1"
#320
0&
#325
b10 0
b10 5
b10 ;
1&
#326
b10 *
#327
0"
1!
#330
0&
#331
1)
#335
b1101011 .
b1101011 2
b1101011 =
b1101011 -
b1101011 4
b1101011 <
b10 /
b10 3
b10 7
1&
#336
b101 *
#337
0!
1#
#340
0&
#345
b10 1
b10 6
b10 9
b1101101 -
b1101101 4
b1101101 <
1&
#347
1$
#350
0&
#355
b1101111 -
b1101111 4
b1101111 <
b100 /
b100 3
b100 7
1&
#360
0&
#365
1&
#370
0&
#371
